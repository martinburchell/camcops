===============================================================================
Problem Q&A for building for android
===============================================================================

-------------------------------------------------------------------------------
Phase 1: not compiling
-------------------------------------------------------------------------------

Q. 'round' is not a member of 'std'
A. Use qRound instead of std::round

Q. 'trunc' is not a member of 'std'
A. (a) Create custom mathfunc::trunc() function, as Qt doesn't offer a qTrunc().
   (b) Mentally moan, because trunc is part of the C99 standard.
       https://stackoverflow.com/questions/6709405/is-there-a-trunc-function-in-c

Q. 'nextafter' is not a member of 'std'
A. Replace it with custom constructs; see floatbits.h
   - https://stackoverflow.com/questions/16335992/alternative-to-c11s-stdnextafter-and-stdnexttoward-for-c03
   - https://randomascii.wordpress.com/2012/01/23/stupid-float-tricks-2/

Q. 'lldiv_t' is not a member of 'std'
A. Use std::ldiv()...

-------------------------------------------------------------------------------
Phase 2: not building/linking
-------------------------------------------------------------------------------

Q. "QT_HAS_BUILTIN" redefined (-Werror)
A. Upgrade from Qt 5.7.0 to 5.7.1 or higher for a bugfix
   https://bugreports.qt.io/browse/QTBUG-54068
   ... we'll upgrade to Qt 5.9 LTS (released 31 May 2017)

Q. Failed to set up kit for Qbs: Could not determine whether Qt is a static build
A. Rebuild Qt and everything else. Error has gone away.

Q. Plugin class name could not be determined for plugin 'qtforandroid'
   ... or other similar errors under Linux
   ... which relate to building Qt statically
   See https://doc.qt.io/qt-6.5/plugins-howto.html#static-plugins
   https://bugreports.qt.io/browse/QTBUG-32618
   ... fixed? Unresolved?

   We have
        qt_android_armv7_install/plugins/platforms/android/libqtforandroid.a
   but no libqtforandroid.so
   Shall we just try something nasty?
   - make libqtforandroid.so directly from libqtforandroid.a
   - copy it from .../plugins/platforms/android to .../plugins/platforms

   Not much joy there (see below).
   - Where is this coming from?
     Project WARNING: Plugin class name could not be determined for plugin 'qtforandroid'.
   - It's detected by qt-creator/src/plugins/qmakeprojectmanager/qmakeparser.cpp,
     on line 79, but it's created by:
   ... qt5/qtbase/mkspecs/features/qt.prf
   ... this:

        !isEmpty(QTPLUGIN) {
            IMPORT_FILE_CONT = \
                "// This file is autogenerated by qmake. It imports static plugin classes for" \
                "// static plugins specified using QTPLUGIN and QT_PLUGIN_CLASS.<plugin> variables." \
                "$${LITERAL_HASH}include <QtPlugin>"
            for (plug, QTPLUGIN) {
                plug_class = $$eval(QT_PLUGIN.$${plug}.CLASS_NAME)
                !isEmpty(plug_class): \
                    IMPORT_FILE_CONT += "Q_IMPORT_PLUGIN($$plug_class)"
                else: \
                    warning("Plugin class name could not be determined for plugin '$$plug'.")
            }
            IMPORT_CPP = $$OUT_PWD/$$lower($$basename(TARGET))_plugin_import.cpp
            write_file($$IMPORT_CPP, IMPORT_FILE_CONT)|error()
            GENERATED_SOURCES += $$IMPORT_CPP
            QMAKE_DISTCLEAN += $$IMPORT_CPP
        }

    ... so probably really from e.g.
        qt_android_armv7_install/mkspecs/features/qt.prf (or one of the other similar ones)
    ... yes, that one; you can edit it.
    ... it looks for QTPLUGIN.<plugin_name>.CLASS_NAME
    ... if you print QTPLUGIN, it looks like:
            QTPLUGIN: qtmedia_android qtaudio_opensles qtmultimedia_m3u
            qtforandroid qsvgicon qgif qicns qico qjpeg qsvg qtga qtiff
            qwbmp qwebp qandroidbearer qsqlite
    ... but e.g. QTPLUGIN.qtmedia_android.CLASS_NAME is QAndroidMediaServicePlugin
    ... [print that with:

            warning("Plugin.<plug>.CLASS_NAME for plugin $${plug}: $${plug_class}")  # RNC

    ... [note: you have to edit the behind-the-scenes one, qt.prf; QTPLUGIN
        can be completely blank when seen by the project .pro file]

    ... these things are set by mkspecs/modules/qt_plugin*.pri

    Now, note:
    ... qt_android_armv7_install/mkspecs/features/create_cmake.prf
        ... does this create CMake files that build the plugins?
        ... e.g. qt_linux_x86_64_build/qtmultimedia/lib/cmake
                 qt_android_armv7_build/qtmultimedia/lib/cmake
    In particular, qt_android_armv7_build/qtandroidextras/Makefile refers to
    qt_android_armv7_build/qtbase/mkspecs/modules/qt_plugin_qtforandroid.pri.
    The BUILD directory has
        qtbase/mkspecs/modules-inst/qt_plugin_qtforandroid.pri
        qtbase/mkspecs/modules/qt_plugin_qtforandroid.pri
    and in the INSTALL directory there's
        mkspecs/modules/qt_plugin_qtforandroid.pri
    Aha! This is:
        QT_PLUGIN.qtforandroid.TYPE = platforms
        QT_PLUGIN.qtforandroid.EXTENDS =
        QT_PLUGIN.qtforandroid.DEPENDS = s,-private$,_private,g
        QT_PLUGIN.qtforandroid.CLASS_NAME =
        QT_PLUGINS += qtforandroid
    Suspicious?
    By comparison, qt_plugin_qjpeg.pri has
        QT_PLUGIN.qjpeg.CLASS_NAME = QJpegPlugin
    ... which is a class defined ultimately in
        qt5/qtbase/src/plugins/imageformats/jpeg/main.cpp
    A quick grep for "droidPlugin" gives us
        qt5/qtbase/src/plugins/platforms/android/androidjnimain.cpp
    which seems to suggest QAndroidPlatformIntegrationPlugin
    from qt5/qtbase/src/plugins/platforms/android/androidplatformplugin.cpp

    So, edit mkspecs/modules/qt_plugin_qtforandroid.pri accordingly with
        QT_PLUGIN.qtforandroid.CLASS_NAME = QAndroidPlatformIntegrationPlugin
    Then in qmake, QT_PLUGIN.qtforandroid.CLASS_NAME appears as "qtforandroid"!

    Right. New set of errors...

    ld: error: cannot find -lqtforandroid
    libcamcops.so_plugin_import.o:libcamcops.so_plugin_import.cpp:function
        _GLOBAL__sub_I_libcamcops.so_plugin_import.cpp: error: undefined
        reference to 'qt_static_plugin_QAndroidPlatformIntegrationPlugin()'

    Add linker directory (...*install/plugins/platforms/android):
    it finds it -- with just a .a file, so .so is unnecessary - but:

        ld: error: /home/rudolf/dev/qt_local_build/qt_android_armv7_install/
            plugins/platforms/android/libqtforandroid.a(androidjnimain.o):
            multiple definition of 'JNI_OnLoad'
        Makefile:2130: recipe for target 'libcamcops.so' failed
        ld: /home/rudolf/dev/qt_local_build/qt_android_armv7_install/plugins/
            mediaservice/libqtmedia_android.a(qandroidmediaserviceplugin.o):
            previous definition here

    So, maybe the problem isn't that libqtforandroid needs to be linked in,
    but that it shouldn't be linked in, and should stop complaining about it.
    That would mean addressing instead the error (see below) "No platform
    plugin, neither libqtforandroid.so or libqtforandroidGL.so, included in
    package. Please include one."

Q. [from androiddeployqt] Cannot find android sources in ${PWD}/android
   ... which comes from qt5/qttools/src/androiddeployqt/main.cpp
   ... copyAndroidSources(), line 985, using Options::androidSourceDirectory
       ... the error occurs if that directory doesn't exist
   ... androidSourceDirectory set set by readInputFile(), line 757
   ... to the "android-package-source-directory" value of jsonObject
   ... read from JSON in the file indicated by options->inputFilename
   ... set by parseOptions, line 328, from the "--input" parameter to
       androiddeployqt
   ... looks like there is a single json file made by qmake in the build
       directory (e.g. android-libcamcops.so-deployment-settings.json)
   ... presumably from the ANDROID_PACKAGE_SOURCE_DIR variable in the .pro file
   ... fixed; was wrong

Q. [from androiddeployqt] No platform plugin, neither libqtforandroid.so or
   libqtforandroidGL.so, included in package. Please include one.
   - manually included libqtforandroid.so via ANDROID_EXTRA_LIBS
     ... still the error
     ... despite the file appearing in the JSON under android-extra-libs
     ... but the error comes from line 1280 of androiddeployqt/main.cpp
     ... in updateAndroidManifest
     ... based on options.qtDependencies
   - one option might be to use ANDROID_DEPLOYMENT_DEPENDENCIES and take full
     manual control; https://doc.qt.io/qt-6.5/deployment-android.html

So is the answer that Android build should be DYNAMIC?
"Dynamic" here still means that the Qt libraries are bundled into an APK, so
it's still a single-file distribution.

Yes - substantial progress with that.

-------------------------------------------------------------------------------
Phase 3: deploying to tablet but not running
-------------------------------------------------------------------------------

    D/dalvikvm(14118): Trying to load lib /data/data/org.camcops.camcops/lib/libgnustl_shared.so 0x42268738
    D/dalvikvm(14118): Shared lib '/data/data/org.camcops.camcops/lib/libgnustl_shared.so' already loaded in same CL 0x42268738
    D/dalvikvm(14118): Trying to load lib /data/data/org.camcops.camcops/lib/libQt5Core.so 0x42268738
    D/dalvikvm(14118): Shared lib '/data/data/org.camcops.camcops/lib/libQt5Core.so' already loaded in same CL 0x42268738
    D/dalvikvm(14118): Trying to load lib /data/data/org.camcops.camcops/lib/libQt5Network.so 0x42268738
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    W/System.err(14118): java.lang.reflect.InvocationTargetException
    W/System.err(14118): 	at java.lang.reflect.Method.invokeNative(Native Method)
    W/System.err(14118): 	at java.lang.reflect.Method.invoke(Method.java:511)
    W/System.err(14118): 	at org.qtproject.qt5.android.bindings.QtLoader.loadApplication(QtLoader.java:237)
    W/System.err(14118): 	at org.qtproject.qt5.android.bindings.QtLoader.startApp(QtLoader.java:649)
    W/System.err(14118): 	at org.qtproject.qt5.android.bindings.QtActivityLoader.onCreate(QtActivityLoader.java:183)
    W/System.err(14118): 	at org.qtproject.qt5.android.bindings.QtActivity.onCreateHook(QtActivity.java:266)
    W/System.err(14118): 	at org.qtproject.qt5.android.bindings.QtActivity.onCreate(QtActivity.java:273)
    W/System.err(14118): 	at android.app.Activity.performCreate(Activity.java:5008)
    W/System.err(14118): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1079)
    W/System.err(14118): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2023)
    W/System.err(14118): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2084)
    W/System.err(14118): 	at android.app.ActivityThread.access$600(ActivityThread.java:130)
    W/System.err(14118): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1195)
    W/System.err(14118): 	at android.os.Handler.dispatchMessage(Handler.java:99)
    W/System.err(14118): 	at android.os.Looper.loop(Looper.java:137)
    W/System.err(14118): 	at android.app.ActivityThread.main(ActivityThread.java:4745)
    W/System.err(14118): 	at java.lang.reflect.Method.invokeNative(Native Method)
    W/System.err(14118): 	at java.lang.reflect.Method.invoke(Method.java:511)
    W/System.err(14118): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)
    W/System.err(14118): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)
    W/System.err(14118): 	at dalvik.system.NativeStart.main(Native Method)
    W/System.err(14118): Caused by: java.lang.UnsatisfiedLinkError: Cannot load library: find_library[1201]:   820 'libQt5Network.so' failed to load previously
    D/dalvikvm( 1011): GC_CONCURRENT freed 1848K, 41% free 14927K/25287K, paused 31ms+19ms, total 218ms
    W/System.err(14118): 	at java.lang.Runtime.load(Runtime.java:340)
    W/System.err(14118): 	at java.lang.System.load(System.java:521)
    W/System.err(14118): 	at org.qtproject.qt5.android.QtNative.loadQtLibraries(QtNative.java:173)
    W/System.err(14118): 	at org.qtproject.qt5.android.QtActivityDelegate.loadApplication(QtActivityDelegate.java:586)
    W/System.err(14118): 	... 21 more

Cryptic:
    https://stackoverflow.com/questions/6020719/what-could-cause-java-lang-reflect-invocationtargetexception
Look in the project's build-*/android-build/libs/armeabi-v7a:
    libQt5Network.so present
    but no OpenSSL libraries; is that the cause?

Added libcrypto.so and libssl.so via ANDROID_EXTRA_LIBS
... they duly appear in that .../android-build/libs/... directory, and we get

    I/ActivityManager( 1011): START {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10200000 cmp=org.camcops.camcops/org.qtproject.qt5.android.bindings.QtActivity bnds=[656,150][752,246] u=0} from pid 1335
    D/WindowManager( 1011): adjustConfigurationLw, config:{1.0 0mcc0mnc (no locale) sw800dp w1280dp h752dp xlrg land ?uimode ?night finger qwerty/v/v -nav/v} mLidState:1 mHasDockFeature:true mHasHallSensorFeature:true config.hardKeyboardHidden:1
    D/dalvikvm(17914): Trying to load lib /data/data/org.camcops.camcops/lib/libgnustl_shared.so 0x42267678
    D/dalvikvm(17914): Shared lib '/data/data/org.camcops.camcops/lib/libgnustl_shared.so' already loaded in same CL 0x42267678
    D/dalvikvm(17914): Trying to load lib /data/data/org.camcops.camcops/lib/libQt5Core.so 0x42267678
    D/dalvikvm(17914): Shared lib '/data/data/org.camcops.camcops/lib/libQt5Core.so' already loaded in same CL 0x42267678
    D/dalvikvm(17914): Trying to load lib /data/data/org.camcops.camcops/lib/libQt5Network.so 0x42267678
    W/System.err(17914): java.lang.reflect.InvocationTargetException
    W/System.err(17914): 	at java.lang.reflect.Method.invokeNative(Native Method)
    W/System.err(17914): 	at java.lang.reflect.Method.invoke(Method.java:511)
    W/System.err(17914): 	at org.qtproject.qt5.android.bindings.QtLoader.loadApplication(QtLoader.java:237)
    W/System.err(17914): 	at org.qtproject.qt5.android.bindings.QtLoader.startApp(QtLoader.java:649)
    W/System.err(17914): 	at org.qtproject.qt5.android.bindings.QtActivityLoader.onCreate(QtActivityLoader.java:183)
    W/System.err(17914): 	at org.qtproject.qt5.android.bindings.QtActivity.onCreateHook(QtActivity.java:266)
    W/System.err(17914): 	at org.qtproject.qt5.android.bindings.QtActivity.onCreate(QtActivity.java:273)
    W/System.err(17914): 	at android.app.Activity.performCreate(Activity.java:5008)
    W/System.err(17914): 	at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1079)
    W/System.err(17914): 	at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2023)
    W/System.err(17914): 	at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2084)
    W/System.err(17914): 	at android.app.ActivityThread.access$600(ActivityThread.java:130)
    W/System.err(17914): 	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1195)
    W/System.err(17914): 	at android.os.Handler.dispatchMessage(Handler.java:99)
    W/System.err(17914): 	at android.os.Looper.loop(Looper.java:137)
    W/System.err(17914): 	at android.app.ActivityThread.main(ActivityThread.java:4745)
    W/System.err(17914): 	at java.lang.reflect.Method.invokeNative(Native Method)
    W/System.err(17914): 	at java.lang.reflect.Method.invoke(Method.java:511)
    W/System.err(17914): 	at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:786)
    W/System.err(17914): 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:553)
    W/System.err(17914): 	at dalvik.system.NativeStart.main(Native Method)
    W/System.err(17914): Caused by: java.lang.UnsatisfiedLinkError: Cannot load library: find_library[1201]:   820 'libQt5Network.so' failed to load previously
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    W/System.err(17914): 	at java.lang.Runtime.load(Runtime.java:340)
    W/System.err(17914): 	at java.lang.System.load(System.java:521)
    W/System.err(17914): 	at org.qtproject.qt5.android.QtNative.loadQtLibraries(QtNative.java:173)
    W/System.err(17914): 	at org.qtproject.qt5.android.QtActivityDelegate.loadApplication(QtActivityDelegate.java:586)
    W/System.err(17914): 	... 21 more

but there was, in one message I didn't manage to capture, a reference to
a missing function SSL_something.

So... this suggests that OpenSSL is installed, but Qt's not looking at it.

Changed Qt's OpenSSL linkage...

Success!

-------------------------------------------------------------------------------
Phase 4: running but behaviour not matching Linux version
-------------------------------------------------------------------------------

- Scrolling
  ... mostly fixed with QScroller; residual problem is that a few widgets
      respond to two-finger swipes but not one-finger swipes; see
      uifunc::applyScrollGestures().
- Camera viewfinder
- QMessageBox::setButtonText not working
  ... obsolete; use addButton instead
  ... see https://stackoverflow.com/questions/25101171/what-do-the-different-qmessagebox-roles-mean
- Alter icon size based on screen DPI (e.g. my phone is 216 dpi, cf. monitor 96).

-------------------------------------------------------------------------------
Phase 5: getting the right certificate
-------------------------------------------------------------------------------

Point Qt Creator to the keystore, as per
    http://doc.qt.io/qtcreator/creator-deploying-android.html
... in my case, CAMCOPS_ANDROID_KEYSTORE.bin
... which, obviously, is not in the Git repository.

Good for Qt; that was easy!


-------------------------------------------------------------------------------
To take an Android screenshot:
-------------------------------------------------------------------------------
    adb shell screencap -p | perl -pe 's/\x0D\x0A/\x0A/g' > screen.png
    ... https://blog.shvetsov.com/2013/02/grab-android-screenshot-to-computer-via.html

-------------------------------------------------------------------------------
Phone not connecting:
-------------------------------------------------------------------------------

watch adb devices
watch lsusb
dmesg

If the phone keeps appearing and disappearing:

Try editing /etc/udev/rules.d/51-android.rules to look like this:

# RNC
# After installing this file, run:
#       sudo chmod a+r /etc/udev/rules.d/51-android.rules
#       sudo udevadm control --reload-rules

# RNC's Samsung Galaxy S5 Neo:
SUBSYSTEM=="usb", SYSFS{idVendor}=="04e8", ATTR{idProduct}=="6860", MODE="0666"

... and then do what it says.
... but still problems on shrike.

See also:
- https://askubuntu.com/questions/854332/how-to-connect-android-7-1-to-ubuntu-linux-with-usb

... but the dmesg/lsusb problem is before that.
See:
- https://android.stackexchange.com/questions/12491/adb-constantly-disconnects-shows-device-offline

-------------------------------------------------------------------------------
Remote debugger fails
-------------------------------------------------------------------------------

Q.  "Connecting to remote server failed:
    Remote 'g' packet is too long: ..."
A.  In the Qt kit, change debugger from "System GDB" to
    "Android Debugger for Android GCC (arm-4.9)"

    See also:
    - https://stackoverflow.com/questions/4896316/gdb-remote-cross-debugging-fails-with-remote-g-packet-reply-is-too-long
