usage: build_qt.py [-h] [--show_config_only] [--root_dir ROOT_DIR]
                   [--nparallel NPARALLEL] [--force] [--tee TEE]
                   [--verbose {0,1,2}] [--inherit_os_env]
                   [--no_inherit_os_env] [--build_all]
                   [--build_android_x86_32] [--build_android_arm_v7_32]
                   [--build_android_arm_v8_64] [--build_linux_x86_64]
                   [--build_macos_x86_64] [--build_windows_x86_64]
                   [--build_windows_x86_32] [--build_ios_arm_v7_32]
                   [--build_ios_arm_v8_64] [--build_ios_simulator_x86_32]
                   [--build_ios_simulator_x86_64]
                   [--qt_build_type {debug,release,release_w_symbols}]
                   [--qt_src_dirname QT_SRC_DIRNAME] [--qt_openssl_static]
                   [--qt_openssl_linked] [--android_sdk_root ANDROID_SDK_ROOT]
                   [--android_ndk_root ANDROID_NDK_ROOT]
                   [--android_ndk_host ANDROID_NDK_HOST]
                   [--android_toolchain_version ANDROID_TOOLCHAIN_VERSION]
                   [--java_home JAVA_HOME] [--ios_sdk IOS_SDK]
                   [--jom_executable JOM_EXECUTABLE]

Build Qt and other libraries for CamCOPS

optional arguments:
  -h, --help            show this help message and exit

General:
  General options

  --show_config_only    Show config, then quit (default: False)
  --root_dir ROOT_DIR   Root directory for source and builds (default taken
                        from environment variable CAMCOPS_QT_BASE_DIR if
                        present) (default: /path/to/user/dev/qt_local_build)
  --nparallel NPARALLEL
                        Number of parallel processes to run (default: 8)
  --force               Force build (default: False)
  --tee TEE             Copy stdout/stderr to this named file (default: None)
  --verbose {0,1,2}, -v {0,1,2}
                        Verbosity level (default: 0)
  --inherit_os_env      Inherit the parent OS environment variables (default:
                        False)
  --no_inherit_os_env   Do not inherit the parent OS environment variables
                        (default: False)

Architecture:
  Choose architecture for which to build

  --build_all           Build for all architectures supported on this host
                        (this host is: Linux/Intel x86 (64-bit)) (default:
                        False)
  --build_android_x86_32
                        An architecture target (Android under an Intel x86
                        32-bit emulator) (default: False)
  --build_android_arm_v7_32
                        An architecture target (Android with a 32-bit ARM
                        processor) (default: False)
  --build_android_arm_v8_64
                        An architecture target (Android with a 64-bit ARM
                        processor) (default: False)
  --build_linux_x86_64  An architecture target (native Linux with a 64-bit
                        Intel/AMD CPU; check with 'lscpu' and 'uname -a'
                        (default: False)
  --build_macos_x86_64  An architecture target (macOS under an Intel 64-bit
                        CPU; check with 'sysctl -a|grep cpu', and see
                        https://support.apple.com/en-gb/HT201948 ) (default:
                        False)
  --build_windows_x86_64
                        An architecture target (Windows with an Intel/AMD
                        64-bit CPU) (default: False)
  --build_windows_x86_32
                        An architecture target (Windows with an Intel/AMD
                        32-bit CPU) (default: False)
  --build_ios_arm_v7_32
                        An architecture target (iOS with a 32-bit ARM
                        processor) (default: False)
  --build_ios_arm_v8_64
                        An architecture target (iOS with a 64-bit ARM
                        processor) (default: False)
  --build_ios_simulator_x86_32
                        An architecture target (iOS with an Intel 32-bit CPU,
                        for the iOS simulator) (default: False)
  --build_ios_simulator_x86_64
                        An architecture target (iOS with an Intel 64-bit CPU,
                        for the iOS simulator) (default: False)

Qt:
  Qt options [Qt must be built from source for SQLite support, and also if
  static OpenSSL linkage is desired; note that static OpenSSL linkage
  requires a Qt rebuild (slow!) if you rebuild OpenSSL]

  --qt_build_type {debug,release,release_w_symbols}
                        Qt build type (release = small and quick) (default:
                        release)
  --qt_src_dirname QT_SRC_DIRNAME
                        Qt source directory (default: qt5)
  --qt_openssl_static   Link OpenSSL statically (ONLY if Qt is statically
                        linked) [True=static, False=dynamic] (default: True)
  --qt_openssl_linked   Link OpenSSL dynamically [True=static, False=dynamic]
                        (default: True)

Android:
  Android options (NB you must install the Android SDK and NDK separately,
  BEFOREHAND)

  --android_sdk_root ANDROID_SDK_ROOT
                        Android SDK root directory (default:
                        /path/to/user/dev/android-sdk-linux)
  --android_ndk_root ANDROID_NDK_ROOT
                        Android NDK root directory (default:
                        /path/to/user/dev/android-ndk-r20)
  --android_ndk_host ANDROID_NDK_HOST
                        Android NDK host architecture (default: linux-x86_64)
  --android_toolchain_version ANDROID_TOOLCHAIN_VERSION
                        Android toolchain version (default: 4.9)
  --java_home JAVA_HOME
                        JAVA_HOME directory (default:
                        /usr/lib/jvm/java-11-openjdk-amd64)

iOS:
  iOS options

  --ios_sdk IOS_SDK     iOS SDK to use (leave blank for system default)
                        (default: )

jom:
  'jom' parallel make tool for Windows

  --jom_executable JOM_EXECUTABLE
                        jom executable (typically installed with QtCreator)
                        (default: C:\Qt\Tools\QtCreator\bin\jom.exe)
