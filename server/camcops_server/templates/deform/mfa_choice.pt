<div tal:replace="nothing">
<!--

camcops_server/templates/deform/mfa_choice.pt

===============================================================================

    Copyright (C) 2012-2020 Rudolf Cardinal (rudolf@pobox.com).

    This file is part of CamCOPS.

    CamCOPS is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    CamCOPS is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with CamCOPS. If not, see <https://www.gnu.org/licenses/>.

===============================================================================
-->
</div>
<div tal:define="oid oid|field.oid;
                 css_class css_class|field.widget.css_class;
                 style style|field.widget.style;
                 inline getattr(field.widget, 'inline', False);
                 autofocus autofocus|field.autofocus"
     tal:omit-tag="not inline">
  ${field.start_rename()}
  <div tal:repeat="choice values | field.widget.values"
       tal:omit-tag="inline"
       class="radio">
    <label for="${oid}-${repeat.choice.index}"
           tal:define="(value, title) choice"
           tal:attributes="class inline and 'radio-inline'">
      <input tal:attributes="checked value == cstruct;
                             class css_class;
                             style style;
                             autofocus not repeat.choice.index and autofocus;
                             readonly 'readonly' in getattr(field.widget, 'attributes', {}) and value == cstruct;
                             disabled 'readonly' in getattr(field.widget, 'attributes', {}) and value != cstruct;
                             attributes|field.widget.attributes|{};
                             "
             type="radio"
             name="${oid}"
             value="${value}"
             id="${oid}-${repeat.choice.index}"/>
      ${title}
    </label>
    <script type="text/javascript">
      deform.addCallback(
         '${oid}-${repeat.choice.index}',
         function (oid) {
            $("#" + oid).change(function() {
                event = new CustomEvent("mfaTypeChanged", {detail: "${oid}"});
                document.dispatchEvent(event);
            });
         });
    </script>
  </div>
  ${field.end_rename()}
</div>
