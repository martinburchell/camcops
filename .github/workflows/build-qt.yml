---
# yamllint disable rule:line-length
name: Build Qt
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - tablet_qt/tools/build_qt.py
            - .github/workflows/build-qt.yml
jobs:
    build-qt:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: 3.8
            - name: Qt prerequisites
              run: |
                  # https://wiki.qt.io/Building_Qt_5_from_Git
                  set -xe
                  codename=`lsb_release -cs`
                  echo "deb-src http://archive.ubuntu.com/ubuntu ${codename} universe" | sudo tee -a /etc/apt/sources.list
                  echo "deb-src http://archive.ubuntu.com/ubuntu ${codename}-updates universe" | sudo tee -a /etc/apt/sources.list
                  sudo apt-get update
                  sudo apt-get -y build-dep qt5-default
                  sudo apt-get -y install build-essential perl python git
                  sudo apt-get -y install ninja-build
                  sudo apt-get -y install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
                  sudo apt-get -y install flex bison gperf libicu-dev libxslt-dev ruby
                  sudo apt-get -y install libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libxtst-dev libxss-dev libdbus-1-dev libevent-dev libfontconfig1-dev libcap-dev libpulse-dev libudev-dev libpci-dev libnss3-dev libasound2-dev libegl1-mesa-dev gperf bison nodejs
                  sudo apt-get -y install libasound2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev libgstreamer-plugins-bad1.0-dev
                  sudo apt-get -y install libxcb-xinerama0-dev
                  sudo apt-get -y install libdrm-dev libxcb-glx0-dev libzstd-dev
                  sudo apt-get -y install libclang-10-dev libclang-11-dev libclang-12-dev
            - name: Pip install
              run: |
                  set -xe
                  python -m venv ${HOME}/venv
                  source ${HOME}/venv/bin/activate
                  python -VV
                  python -m site
                  python -m pip install -U pip
                  echo dumping pre-installed packages
                  python -m pip freeze
                  echo installing pip packages
                  pip install cardinal_pythonlib
                  pip install distro
            - name: Build Qt
              run: |
                  source ${HOME}/venv/bin/activate
                  export CAMCOPS_QT_BASE_DIR=${HOME}/qt_local_build
                  cd tablet_qt/tools
                  cmake --version
                  apt list --installed "libclang*-dev"
                  exit 1
                  ./build_qt.py --build_linux_x86_64 --nparallel 1
