---
# yamllint disable rule:line-length
name: Build Qt
# yamllint disable-line rule:truthy
on:
    push:
        paths:
            - tablet_qt/tools/build_qt.py
            - .github/workflows/build-qt.yml
jobs:
    build-qt:
        strategy:
            matrix:
                include:
                    - name: ubuntu-20.04
                      os: ubuntu-20.04
                    - name: ubuntu-22.04
                      os: ubuntu-22.04
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: 3.8
            - name: Change apt mirror
              run: |
                  set -eux -o pipefail
                  ${GITHUB_WORKSPACE}/.github/scripts/change_apt_mirror.sh
            - name: Ubuntu 20.04 prerequisites
              if: matrix.os == 'ubuntu-20.04'
              run: |
                  set -xe
                  sudo apt-get -y build-dep qt5-default
                  sudo apt-get -y install build-essential perl python git
                  sudo apt-get -y install ninja-build
                  sudo apt-get -y install '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
                  sudo apt-get -y install flex bison gperf libicu-dev libxslt-dev ruby
                  sudo apt-get -y install libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libxtst-dev libxss-dev libdbus-1-dev libevent-dev libfontconfig1-dev libcap-dev libpulse-dev libudev-dev libpci-dev libnss3-dev libasound2-dev libegl1-mesa-dev nodejs
                  sudo apt-get -y install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev libgstreamer-plugins-bad1.0-dev
                  sudo apt-get -y install libxcb-xinerama0-dev
                  sudo apt-get -y install libdrm-dev libxcb-glx0-dev libzstd-dev
                  sudo apt-get -y install libclang-10-dev libclang-11-dev libclang-12-dev
            - name: Ubuntu 22.04 prerequisites
              if: matrix.os == 'ubuntu-22.04'
              run: |
                  set -xe
                  sudo apt install -y libunwind-dev
                  sudo apt-get -y install build-essential python3 git
                  sudo apt-get -y install ninja-build clang
                  sudo apt-get -y install '^libxcb.*-dev' libx11-xcb-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
                  sudo apt-get -y install flex bison gperf
                  sudo apt-get -y install libxcursor-dev libxcomposite-dev libxdamage-dev libxrandr-dev libfontconfig1-dev libpulse-dev libnss3-dev libegl1-mesa-dev nodejs
                  sudo apt-get -y install libgstreamer1.0-dev
                  sudo apt-get -y install libdrm-dev
                  sudo apt-get -y install libatspi2.0-dev libbluetooth-dev libclang-dev libcups2-dev
                  sudo apt-get -y install libfreetype6-dev
                  sudo apt-get -y install libhunspell-dev libopengl-dev
                  sudo apt-get -y install libssl-dev libts-dev libx11-dev
                  sudo apt-get -y install libxext-dev
                  sudo apt-get -y install libxfixes-dev
                  sudo apt-get -y install libxkbfile-dev libxshmfence-dev
                  sudo apt-get -y install libxshmfence1 llvm
            - name: Pip install
              run: |
                  set -xe
                  python -m venv ${HOME}/venv
                  source ${HOME}/venv/bin/activate
                  python -VV
                  python -m site
                  python -m pip install -U pip
                  echo dumping pre-installed packages
                  python -m pip freeze
                  echo installing pip packages
                  pip install cardinal_pythonlib
                  pip install distro
            - name: Build Qt
              run: |
                  source ${HOME}/venv/bin/activate
                  export CAMCOPS_QT_BASE_DIR=${HOME}/qt_local_build
                  cd tablet_qt/tools
                  cmake --version
                  apt list --installed "libclang*-dev"
                  (while true; do
                   df -h
                   sleep 15
                   done) &
                  ./build_qt.py --build_linux_x86_64 --nparallel 1
